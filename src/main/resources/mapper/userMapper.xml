<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yhy.dao.UserDao">
    <!--抽取公共部分-->
    <sql id="sql_test">
        SELECT * FROM  user_info
    </sql>
    <select id="testUser" resultType="yhy.pojo.User">
        select * from user_info WHERE id = #{id};
    </select>
    <!--自行封装参数-->


<!--查找全部用户-->
    <select id="findUser" resultType="yhy.pojo.User">
        /*引用的出去的部分*/
        <include refid="sql_test"/>
    </select>
<!--根据姓名查找用户-->
    <select id="findOneUser"  resultType="yhy.pojo.User">
        <include refid="sql_test"/>  WHERE username=#{username}
    </select>
<!--进行批量保存用户-->
   <!-- /*collection：参数的类型  item:list中的对象
    item表示集合中每一个元素进行迭代时的别名，index指定一个名字，用于表示在迭代过程中，每次迭代到的位置，open表示该语句以什么开始，separator表示在每次进行迭代之间以什么符号作为分隔 符，close表示以什么结束，在使用foreach的时候最关键的也是最容易出错的就是collection属性，该属性是必须指定的，但是在不同情况 下，该属性的值是不一样的，主要有一下3种情况：

    1.如果传入的是单参数且参数类型是一个List的时候，collection属性值为list

    2.如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array

    3.如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map
    */-->
    <insert id="saveBath" parameterType="yhy.pojo.User">
        INSERT INTO user_info (id,phone,age,email,username,password,dept_id) VALUES
        <foreach collection="list" item="myuser" index="index" separator=",">
            (#{myuser.id},#{myuser.phone},#{myuser.age},#{myuser.email},#{myuser.username},#{myuser.password},#{myuser.deptId})
        </foreach>
    </insert>
<!--useGeneratedKeys="true" keyProperty="id" 自动生成id并能够获取-->
    <insert id="insertOne" parameterType="yhy.pojo.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_info (phone,age,email,username,password,dept_id) VALUES
            (#{phone},#{age},#{email},#{username},#{password},#{deptId})
    </insert>


    <select id="getUsersByDeptId" resultType="yhy.pojo.User">
        SELECT * FROM  user_info WHERE dept_id=#{id}
    </select>
    <select id="getUsers" resultType="yhy.pojo.User">
        <include refid="sql_test"/> WHERE dept_id=#{id}
    </select>
    <select id="getByFor" resultType="java.lang.String">
        SELECT username FROM  user_info WHERE id IN
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
        and
        gender =#{gender}
    </select>
    <select id="usersTest" resultType="yhy.pojo.User" parameterType="java.util.List">
        SELECT * from user_info WHERE id in
        <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
            id=#{id}
        </foreach>
    </select>

    <select id="getUserList" resultType="yhy.pojo.User">
       SELECT * FROM  user_info
    </select>

    <delete id="deleteIds" parameterType="yhy.pojo.User">
      DELETE  FROM user_info WHERE id IN
        <foreach collection="interest.split(',')" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insertInto" parameterType="yhy.pojo.User">
      INSERT INTO user_info (phone,age,email,user+name,password,dept_id) VALUES
        <foreach collection="list" item="user" index="index" open="(" separator="," close=")">
            #{user.phone},
            #{user.age},
            #{user.email},
            #{user.username},
            #{user.password},
            #{user.deptId}
        </foreach>
    </insert>

    <select id="testDate" resultType="yhy.pojo.User" parameterType="yhy.pojo.User">
      SELECT * from user_info
      <where>
          <if test="age != null and age != ''">
            age = #{age}
          </if>
          <if test="code !=null and code!=''">
              and code=#{code}
          </if>
          <if test="deptId !=null and code != ''">
             and  deptId = #{deptId}
          </if>
      </where>
    </select>


</mapper>